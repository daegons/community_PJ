{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qzom1\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\coding\\\\client\\\\src\\\\Component\\\\Post\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { UploadDiv, UploadForm, UploadButtonDiv } from '../../Style/UploadCSS';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUpload from './ImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = props => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState('');\n  let navigate = useNavigate();\n  const onSubmit = e => {\n    e.preventDefault();\n    if (title === '' || content === '') {\n      return alert('모든 항목을 채워주세요');\n    }\n    let body = {\n      title: title,\n      content: content,\n      image: image\n    };\n    axios.post('/api/post/submit', body).then(res => {\n      if (res.data.success) {\n        alert('글 작성이 완료되었습니다.✔');\n        navigate('/');\n      } else {\n        alert('글 작성이 실패하였습니다.❌');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UploadDiv, {\n    children: /*#__PURE__*/_jsxDEV(UploadForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        setImage: setImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        type: \"text\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadButtonDiv, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSubmit,\n          children: \"\\uC81C\\uCD9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"1omRLBwGe4/3MJFZ2uh2Xr9BqcI=\", false, function () {\n  return [useNavigate];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","UploadDiv","UploadForm","UploadButtonDiv","axios","useNavigate","ImageUpload","jsxDEV","_jsxDEV","Upload","props","_s","title","setTitle","content","setContent","image","setImage","navigate","onSubmit","e","preventDefault","alert","body","post","then","res","data","success","catch","err","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/qzom1/OneDrive/바탕 화면/coding/client/src/Component/Post/Upload.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { UploadDiv, UploadForm, UploadButtonDiv } from '../../Style/UploadCSS';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ImageUpload from './ImageUpload';\r\nconst Upload = (props) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [image, setImage] = useState('');\r\n  let navigate = useNavigate();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title === '' || content === '') {\r\n      return alert('모든 항목을 채워주세요');\r\n    }\r\n    let body = {\r\n      title: title,\r\n      content: content,\r\n      image: image,\r\n    };\r\n\r\n    axios\r\n      .post('/api/post/submit', body)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          alert('글 작성이 완료되었습니다.✔');\r\n          navigate('/');\r\n        } else {\r\n          alert('글 작성이 실패하였습니다.❌');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDiv>\r\n      <UploadForm>\r\n        <label htmlFor=\"title\">제목</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <ImageUpload setImage={setImage} />\r\n        <label htmlFor=\"content\">내용</label>\r\n        <textarea\r\n          id=\"content\"\r\n          type=\"text\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <UploadButtonDiv>\r\n          <button onClick={onSubmit}>제출</button>\r\n        </UploadButtonDiv>\r\n      </UploadForm>\r\n    </UploadDiv>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}